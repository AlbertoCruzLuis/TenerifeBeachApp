{"version":3,"sources":["components/Card/index.js","components/ListCard/index.js","pages/Home/index.js","components/Navbar/index.js","components/Footer/index.js","pages/Layout/index.js","config.js","services/DataService.js"],"names":["Card","id","name","image","scrollPosition","to","className","effect","src","alt","width","height","trackWindowScroll","limitItemsPerPage","useState","beaches","setBeaches","originalBeaches","setOriginalBeaches","history","useHistory","useEffect","getBeachList","map","beach","index","key","_id","Pagination","count","Math","ceil","length","onChange","e","page","data","first_index","last_index","slice","showFirstButton","showLastButton","Home","Helmet","content","Layout","Navbar","Footer","children","API_URL","a","axios","get","then","res","catch","err","push","response","status","getBeach","setBeach"],"mappings":"+JA4BeA,G,MAtBF,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,eAC5B,OACI,kBAAC,IAAD,CAAMC,GAAE,iBAAYJ,EAAZ,MACJ,yBAAKK,UAAU,QACX,yBAAKA,UAAU,aACX,4BAAKJ,IAET,yBAAKI,UAAU,aACX,kBAAC,gBAAD,CACIA,UAAU,aACVC,OAAO,OACPC,IAAKL,EACLM,IAAKP,EACLQ,MAAM,OACNC,OAAO,OACPP,eAAgBA,S,gCC+BzBQ,+BA5CE,SAAC,GAA6C,IAAD,IAA3CC,yBAA2C,MAAvB,EAAuB,EAApBT,EAAoB,EAApBA,eAAoB,EAC5BU,mBAAS,IADmB,mBACnDC,EADmD,KAC1CC,EAD0C,OAEZF,mBAAS,IAFG,mBAEnDG,EAFmD,KAElCC,EAFkC,KAGpDC,EAAUC,cAEhBC,qBAAU,WACNC,YAAaN,EAAWE,EAAmBC,KAC5C,CAACA,IAaJ,OACI,kBAAC,WAAD,KACI,yBAAKb,UAAU,aACTS,EAAQQ,KAAI,SAACC,EAAOC,GAClB,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLxB,GAAIuB,EAAMG,IACVzB,KAAMsB,EAAMtB,KACZC,MAAOqB,EAAMrB,MACbC,eAAgBA,QAKhC,yBAAKE,UAAU,cACX,kBAACsB,EAAA,EAAD,CAAYC,MAAOC,KAAKC,KAAKd,EAAgBe,OAASnB,GAClDoB,SA5BK,SAACC,EAAEC,GACpB,IAAIC,EAAOnB,EAEPoB,GAAeF,EAAO,GAAKtB,EAC3ByB,EAAaF,EAAKJ,OAASnB,GAAsBsB,EAAO,GAAKtB,EAC9DA,GAAsBsB,EAAO,GAAKtB,EAClCuB,EAAKJ,OAERhB,EAAWoB,EAAKG,MAAMF,EAAaC,KAqBvBE,iBAAe,EAACC,gBAAc,S,gBCrBnCC,UAnBF,kBACT,kBAAC,WAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BACAzC,KAAK,cACL0C,QAAQ,gGAGR,sDAEJ,kBAACC,EAAA,EAAD,KACI,yBAAKvC,UAAU,aACX,qEAEJ,kBAAC,EAAD,U,gCCpBZ,oCAqBewC,IAjBA,WACX,OACI,yBAAKxC,UAAU,UACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMD,GAAG,KACL,sDAGR,yBAAKC,UAAU,eACX,kBAAC,IAAD,CAAMD,GAAG,KACL,2C,qDCdpB,0BAWe0C,IARA,WACX,OACI,yBAAKzC,UAAU,oBACX,8D,qDCNZ,4CAmBeuC,IAdA,SAAC,GAAD,IAAEG,EAAF,EAAEA,SAAF,OACX,kBAAC,WAAD,KACI,gCACE,kBAAC,IAAD,OAEF,8BACIA,GAEJ,gCACE,kBAAC,IAAD,U,sJCdGC,EAAU,8C,iBCGV3B,EAAY,uCAAG,WAAON,EAAYE,EAAoBC,GAAvC,SAAA+B,EAAA,sEAClBC,IAAMC,IAAIH,EAAU,cAAcI,MACpC,SAAAC,GACItC,EAAYsC,EAAIlB,KAAMG,MAAM,EAAE,IAC9BrB,EAAmBoC,EAAIlB,SAE7BmB,OAAM,SAAAC,GACJrC,EAAQsC,KAAR,WAAiBD,EAAIE,SAASC,YAPV,2CAAH,0DAWZC,EAAQ,uCAAG,WAAO3D,EAAI4D,EAAU1C,GAArB,SAAA+B,EAAA,sEAChBC,IAAMC,IAAIH,EAAO,gBAAYhD,EAAZ,MAAmBoD,MACtC,SAAAC,GACIO,EAASP,EAAIlB,SAEnBmB,OAAM,SAAAC,GACNrC,EAAQsC,KAAR,WAAiBD,EAAIE,SAASC,YANV,2CAAH,2D","file":"static/js/4.373ad5d5.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport './style.css'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nconst Card = ({id, name, image, scrollPosition}) => {\n    return(\n        <Link to={`/beach/${id}/`}>\n            <div className=\"card\">\n                <div className=\"card-name\">\n                    <h1>{name}</h1>\n                </div>\n                <div className=\"card-body\">\n                    <LazyLoadImage\n                        className=\"lazy-image\"\n                        effect=\"blur\"\n                        src={image}\n                        alt={name}\n                        width=\"100%\"\n                        height=\"100%\"\n                        scrollPosition={scrollPosition} />\n                </div>\n            </div>\n        </Link>\n    );\n}\n\nexport default Card;\n","import React, { useState, useEffect, Fragment } from 'react'\nimport Card from 'components/Card'\nimport './style.css'\nimport Pagination from '@material-ui/lab/Pagination';\nimport { trackWindowScroll } from 'react-lazy-load-image-component';\nimport { useHistory } from 'react-router-dom'\nimport { getBeachList } from 'services/DataService'\n\nconst ListCard = ({limitItemsPerPage = 5, scrollPosition}) => {\n    const [beaches, setBeaches] = useState([])\n    const [originalBeaches, setOriginalBeaches] = useState([]);\n    const history = useHistory()\n\n    useEffect(() => {\n        getBeachList(setBeaches,setOriginalBeaches,history)\n    }, [history])\n\n    const handleChange = (e,page) => {\n        let data = originalBeaches\n\n        let first_index = (page - 1) * limitItemsPerPage\n        let last_index = data.length > limitItemsPerPage + ((page - 1) * limitItemsPerPage)\n         ? limitItemsPerPage + ((page - 1) * limitItemsPerPage) \n         : data.length\n        \n        setBeaches(data.slice(first_index, last_index));\n    }\n\n    return(\n        <Fragment>\n            <div className=\"list-card\">\n                { beaches.map((beach, index) => {\n                    return (\n                        <Card\n                            key={index}\n                            id={beach._id}\n                            name={beach.name}\n                            image={beach.image}\n                            scrollPosition={scrollPosition}\n                        />\n                    )\n                }) }\n            </div>\n            <div className=\"pagination\">\n                <Pagination count={Math.ceil(originalBeaches.length / limitItemsPerPage)}\n                    onChange={handleChange}\n                    showFirstButton showLastButton />\n            </div>\n          </Fragment>\n    );\n}\n\nexport default trackWindowScroll(ListCard);","import React, { Fragment } from 'react'\nimport './style.css'\nimport ListCard from 'components/ListCard'\nimport { Helmet } from \"react-helmet\";\nimport Layout from 'pages/Layout'\n\nconst Home = () => (\n    <Fragment>\n        <Helmet>\n            <meta\n            name=\"description\"\n            content=\"Las mejores playas de Tenerife para hacer turismo las podras encontrar en esta pagina web.\n            \"\n            />\n            <title>Tenerife Beach App</title>\n        </Helmet>\n        <Layout>\n            <div className=\"container\">\n                <p>Conoce las mejores Playas de Tenerife</p>\n            </div>\n            <ListCard />\n        </Layout>\n    </Fragment>\n)\n\nexport default Home","import React from 'react'\nimport './style.css'\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbar-name\">\n                <Link to=\"/\">\n                    <span>Tenerife Beach App</span>\n                </Link>\n            </div>\n            <div className=\"navbar-item\">\n                <Link to=\"/\">\n                    <span>Home</span>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React from 'react'\nimport './style.css'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-container\">\n            <p>Â© 2021 Tenerife Beach App</p>\n        </div>\n    )\n}\n\nexport default Footer","import React, { Fragment } from 'react'\nimport './style.css'\nimport Navbar from 'components/Navbar'\nimport Footer from 'components/Footer'\n\nconst Layout = ({children}) => (\n    <Fragment>\n        <header>\n          <Navbar />\n        </header>\n        <main>\n          { children }\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n    </Fragment>\n)\n\nexport default Layout","export const API_URL = 'https://tenerifebeachapi.herokuapp.com/api/'\n\n","import { API_URL } from 'config'\nimport axios from 'axios'\n\nexport const getBeachList = async (setBeaches, setOriginalBeaches, history) => {\n    await axios.get(API_URL + 'beachlist/').then(\n        res => {\n            setBeaches((res.data).slice(0,5))\n            setOriginalBeaches(res.data);\n        }\n    ).catch(err => {\n        history.push(`/${err.response.status}`)\n    })\n}\n\nexport const getBeach = async (id, setBeach, history) => {\n  await axios.get(API_URL + `beach/${id}/`).then(\n      res => {\n          setBeach(res.data)\n      }\n  ).catch(err => {\n    history.push(`/${err.response.status}`)\n  })\n}\n"],"sourceRoot":""}